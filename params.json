{"name":"opt-fast","tagline":"Package for fast computation of the Optional Polya Tree","body":"## Overview\r\nopt-fast implements multivariate density estimation via the Optional Polya Tree (OPT) (Wong and Ma, 2010). Continuous and discrete variables are supported. However, categorical variables are not yet supported. There are also options for performing a copula transform via OPT and also multi-class classification. \r\n\r\nBased on the MiniBooNE dataset ([UCI link](http://archive.ics.uci.edu/ml/datasets/MiniBooNE+particle+identification)), a 50 dimensional particle identification problem. The data set was split into 12000/130064 samples used for testing and the remaining for training. opt-fast can achieve a classification rate of 85.71% compared to ~84% using SVM. See examples below for details. \r\n\r\nPlease cite:\r\n\r\nFor the Optional Polya Tree\r\n```\r\nWing Hung Wong and Li Ma (2010), Optional Polya Tree and Bayesian Inference. \r\nAnnals of Statistics, 38:1433-1459.\r\n```\r\nFor the opt-fast package\r\n```\r\nPublication in draft\r\n```\r\n\r\n## Installation\r\n\r\nOnly Linux and Mac OS X supported. No additional libraries required.\r\n\r\nTo install type\r\n```\r\nmake\r\n```\r\n\r\nThen copy the binary `opt-fast` to the directory of your choice.\r\n\r\n## Examples\r\n\r\n### Density Estimation Example\r\nDownload the following small dataset randomly generated from a 2-D normal distribution. [File link]\r\nThe true density at a large number of points is also included.\r\n\r\n**Estimate without copula transform**\r\n\r\n\r\n\r\n**Estimate with copula transform**\r\n\r\n\r\n### Classification Example\r\n\r\n\r\n### Real Data Example\r\n\r\n\r\n## Future Updates/Issues\r\n* Matlab and/or R package\r\n* More speed\r\n* Use parameter parsing library\r\n\r\n## Contact\r\nPlease report any bugs to [John Mu](http://www.umnhoj.com)","google":"UA-42486910-1","note":"Don't delete this file! It's used internally to help with page regeneration."}